<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Modern Web Design</title>
    <style>
      body {
        /* font-family: Arial, sans-serif; */
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
      }

      .header {
        background-color: #333;
        color: white;
        text-align: center;
        padding: 20px;
      }
      .menu {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #333;
        color: white;
        padding: 10px;
        position: relative; /* Thêm dòng này */
        z-index: 1; /* Thêm dòng này */
      }
      .menu.open {
        flex-direction: column; /* Thêm dòng này */
        align-items: flex-start; /* Thêm dòng này */
      }
      .menu.open .update-button {
        margin-top: 20px; /* Thêm dòng này */
      }
      .menu-list {
        display: none;
        position: absolute;
        top: 100%;
        left: 0;
        background-color: #000; /* Đổi màu nền thành đen */
        color: #fff; /* Màu chữ trắng */
        padding: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        border-radius: 5px;
        overflow: hidden;
        transition: all 0.3s ease;
        z-index: 1;
      }

      .menu-list.open {
        display: block;
      }

      .menu-list ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
      }

      .menu-list li {
        padding: 10px 20px;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      .menu-list li:hover {
        background-color: #333; /* Đổi màu nền khi hover */
      }

      .menu.open .menu-list {
        display: block; /* Hiển thị danh sách khi menu được mở */
      }
      /* CSS cho biểu tượng menu */
      .menu-icon {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        width: 30px;
        height: 30px;
        cursor: pointer;
      }
      .menu-icon div {
        width: 100%;
        height: 4px;
        background-color: white;
        transition: all 0.3s;
      }
      /* CSS cho nút Update Data */
      .update-button {
        padding: 10px 20px;
        background-color: #4caf50;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }
      .content {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        padding: 20px;
      }

      .box {
        width: 300px;
        margin: 20px;
        padding: 20px;
        background-color: #fff;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s, opacity 0.3s;
      }

      .box:hover {
        transform: scale(1.05);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
      }

      .box img {
        width: 100%;
        height: auto;
        border-radius: 5px;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }

      .fade-in {
        animation: fadeIn 1s ease-out;
      }

      @keyframes slideIn {
        from {
          transform: translateY(-50px);
          opacity: 0;
        }
        to {
          transform: translateY(0);
          opacity: 1;
        }
      }

      .slide-in {
        animation: slideIn 0.5s ease-out;
      }
      .box img {
        width: 100%;
        height: 300px; /* hoặc bất kỳ chiều cao nào bạn muốn */
        object-fit: cover; /* để ảnh không bị bể */
      }
    </style>
  </head>
  <body>
    <div class="header">
      <h1>Welcome to ARACO</h1>
      <div class="menu">
        <div class="menu-icon" onclick="toggleMenu()">
          <div></div>
          <div></div>
          <div></div>
        </div>
        <div class="menu-list">
          <ul>
            <li onclick="updateData()">
              <a href="#" style="color: #fff;">Update Data </a>
            </li>
            <li><a href="#" style="color: #fff;">Option 2</a></li>
            <li><a href="#" style="color: #fff;">Option 3</a></li>
          </ul>
        </div>
      </div>
    </div>

    <div class="content">
      <div class="box fade-in" onclick="router('/about')">
        <img src="/image/day1.png" alt="Image 1" />
        <h2>データを表示</h2>
        <p>1日分の地点ごとのデータを表示します。</p>
      </div>
      <div class="box fade-in" onclick="router('/crud')">
        <img src="/image/kikan.png" alt="Image 2" />
        <h2>データを評価</h2>
        <p>一定期間のデータを評価します(最長1ヶ月)。</p>
      </div>
    </div>
    <script>
      // Trigger animations when scrolled into view
      const boxes = document.querySelectorAll(".box");
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add("slide-in");
            }
          });
        },
        { threshold: 0.5 }
      );

      boxes.forEach((box) => {
        observer.observe(box);
      });

      function toggleMenu() {
        const menu = document.querySelector(".menu");
        menu.classList.toggle("open"); // Thêm hoặc xóa class 'open' từ menu
      }
      async function router(path) {
        try {
          const response = await fetch(path, {
            method: "GET",
            headers: {
              "Content-Type": "application/json",
            },
          });
          if (response.ok) {
            window.location.href = path;
          } else {
            console.error("Error:", response.statusText);
          }
        } catch (error) {
          console.error("Error:", error);
        }
      }
    </script>
    <script>
      async function updateData() {
        try {
          const response = await fetch("/update-data", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
          });
          const data = await response.text();
          console.log(data); // Log kết quả từ server
          alert("Update Success");
        } catch (error) {
          console.error("Error updating data:", error);
        }
      }
    </script>
  </body>
</html>
